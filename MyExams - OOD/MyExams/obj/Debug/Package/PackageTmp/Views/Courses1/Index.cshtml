@model PagedList.IPagedList<MyExams.ViewModels.CourseDetailsVM>
@using PagedList.Mvc;

<div class="container">
    @{
        ViewBag.Title = "Courses";
    }

    <h2 class="tableTitle">Courses Index</h2>
    <p>
        <a href="@Url.Action("Create", "Courses1")" class="btn btn-success">
            Create    <span class="glyphicon glyphicon-plus"></span>
        </a>
    </p>

    @using (Html.BeginForm())
    {
        <p>
            Find : @Html.TextBox("SearchString")
            <button type="submit" class="btn btn-default" value="Search"><span class="glyphicon glyphicon-search"></span></button>
            @Html.ActionLink("Reset Filter", "Index","Courses1", new { sortOrder = "name", searchString = "" }, new { @class = "btn btn-default" })
        </p>
    }

    <br />
    <div class="container">
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-md-4">
                    <div class="categories courses coursesController">
                        <div class="inner-text bold">
                            <p class="title">@Html.DisplayFor(modelItem => item.Name)</p>
                        </div>
                        <div class="hover-text">
                            <div class="btn-group">
                                @Html.ActionLink("Edit", "Edit", "Courses1", new { id = item.CourseId }, new { @class = "btn btn-success btn-sm" })
                                @Html.ActionLink("Details", "Details", "Courses1", new { id = item.CourseId }, new { @class = "btn btn-primary btn-sm" })
                                @Html.ActionLink("Delete", "Delete", "Courses1", new { id = item.CourseId }, new { @class = "btn btn-danger btn-sm" })
                            </div>
                            <div class="text bold">
                                <p>
                                    @Html.DisplayNameFor(modelItem => item.TeacherDetails.TeacherFullName) :
                                    @Html.DisplayFor(modelItem => item.TeacherDetails.TeacherFullName)
                                </p>
                                <p>
                                    @Html.DisplayNameFor(modelItem => item.Duration) :
                                    @Html.DisplayFor(modelItem => item.Duration)
                                </p>
                                <p>
                                    @Html.DisplayNameFor(modelItem => item.Credits) :
                                    @Html.DisplayFor(modelItem => item.Credits)
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>



    <div style="margin:20px 0">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index", "Courses1", new { page, searchString = ViewBag.SearchString }))
    </div>



</div>


