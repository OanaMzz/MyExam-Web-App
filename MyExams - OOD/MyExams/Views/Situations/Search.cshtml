@model MyExams.ViewModels.SituationFormVM

@{
    ViewBag.Title = "Index";
}
<div class="container">
    <div class="row">
        <div class="col-md-12">
            @*temporary solution - alignment middle*@
            <br />   <br />   <br />   <br />
            <br />

            <div class="col-md-6">

                <div class="situation-info searchSituation">
                    <h2>Situation for Student</h2>
                    <div class="form-horizontal">
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.StudentId, "Student", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.StudentId, Model.StudentIdSelectList, "-- Select student --", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger", @id = "err_stud" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-2 col-md-offset-2">
                                <input type="button" id="stud_form" value="Calculate" class="btn btn-lg btn-success" />
                            </div>
                        </div>
                    </div>
                </div>


            </div>
            <div class="col-md-6">
                <div class="situation-info searchSituation">
                    <h2>Situation for Promotion</h2>

                    <div class="form-horizontal">

                        <hr />

                        <div class="form-group">
                            @Html.LabelFor(model => model.Specialization, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Specialization, Enumerable.Empty<SelectListItem>(), "-- Select specialization --", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Specialization, "", new { @class = "text-danger", @id = "err_spec" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.YearOfStudy, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.YearOfStudy, Enumerable.Empty<SelectListItem>(), "-- Select year --", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.YearOfStudy, "", new { @class = "text-danger", @id = "err_year" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-2 col-md-offset-4">
                            <input type="button" id="promo_from" value="Calculate" class="btn btn-lg btn-success" />
                        </div>
                    </div>

                </div>
                <br /><br />
            </div>

            <div class="resetForm text-center">

                @Html.ActionLink("Reset Form", "Search", "Situations", null, new { @class = "btn btn-primary btn-lg" })
            </div>
        </div>


    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $(document).ready(function () {
            GetSpecializations();
            PopulateYearDropDown();
            ValidateStudentId();
            ValidatePromotionInfo();
        });

        function GetSpecializations() {
            $.ajax({
                url: '@Url.Action("GetCurrentSpecializations", "Situations")',
                type : 'GET',
                success: function (result) {
                    console.log('result', result);

                    var dropDown = document.getElementById('Specialization');

                    result.forEach(function (spec) {
                        dropDown.options[dropDown.options.length] = new Option(spec.Text, spec.Value);
                    });
                },
                error: function (err) {
                    debugger;
                    alert("An error has occured!");
                }
            });
        }

        function PopulateYearDropDown() {
            $("#Specialization").change(function () {

                var valueToSend = $(this).val();
                console.log("value", valueToSend);

                if (!valueToSend) {
                    var dropDown = document.getElementById('YearOfStudy');
                    dropDown.options.length = 0;
                    dropDown.options[dropDown.options.length] = new Option("-- Select year --", "");
                    
                }
                else {
                    GetYears(valueToSend);
                }
            });
        }

        function GetYears(valueToSend) {
            $.ajax({
                url: '@Url.Action("GetYearForSpecialization", "Situations")',
                type: 'POST',
                data: { specialization: valueToSend },
                success: function (result) {
                    console.log("result2", result);

                    var dropDown = document.getElementById('YearOfStudy');
                    dropDown.options.length = 0;
                    dropDown.options[dropDown.options.length] = new Option("-- Select year --", "");

                    result.forEach(function (year) {
                        dropDown.options[dropDown.options.length] = new Option(year.Text, year.Value);
                    });
                },
                error: function (err) {
                    debugger;
                    alert("An error has occured!");
                }
            });
        }

        function ValidateStudentId() {
            $("#stud_form").click(function () {

                $("#err_year").text('');
                $("#err_spec").text('');

                var studId = $("#StudentId").val();

                if (!studId) {
                    $("#err_stud").text("Student is required");
                }
                else {
                    $("#err_stud").text('');
                    console.log("studId", studId);
                    GetStudentSituation(studId);
                }
            });
        }

        function ValidatePromotionInfo() {
            $("#promo_from").click(function () {

                $("#err_stud").text('');

                var promoSpec = $("#Specialization").val();
                var promoYear = $("#YearOfStudy").val();

                if ((!promoSpec) || (!promoYear)) {
                    if ((!promoSpec) && (!promoYear)) {
                        $("#err_spec").text("Specialization is required");
                        $("#err_year").text("Year is required");
                    }
                    else if (!promoSpec) {
                        $("#err_year").text('');
                        $("#err_spec").text("Specialization is required");
                    }
                    else {
                        $("#err_year").text("Year is required");
                        $("#err_spec").text('');
                    }
                }
                else {
                    $("#err_year").text('');
                    $("#err_spec").text('');
                    GetPromotionSituation(promoSpec, promoYear);
                }
            });
        }

        function GetStudentSituation(studId) {
            $.ajax({
                url: '@Url.Action("GetStudentId", "Situations")',
                type: 'POST',
                data: { studentId: studId },
                success: function (result) {
                    window.location.href = result.url;
                },
                error: function (err) {
                    alert("Not sent to Server");
                }
            });
        }

        function GetPromotionSituation(promoSpec, promoYear) {
            $.ajax({
                url: '@Url.Action("GetPromotionInfo", "Situations")',
                type: 'POST',
                data:
                {
                    specialization: promoSpec,
                    year: promoYear
                },
                success: function (result) {
                    window.location.href = result.url;
                },
                error: function (err) {
                    alert("Not sent to Server");
                }
            });
        }

    </script>
}
